server:
  port: 8080

spring:
  application:
    name: apigw-service # Имя приложения отправляется вместе со спанами в Zipkin
  cloud:
    gateway:
      default-filters:
        - TokenRelay    # проксируем Authorization header
        - PreserveHostHeader
      routes:
        - id: customer
          uri: ${CUSTOMER_SERVICE_URL:http://localhost:8081}
          predicates:
            - Path=/api/v1/customers/**
        - id: front-ui
          uri: ${FRONT_UI_SERVICE_URL:http://localhost:8085}
          predicates:
            - Path=/main/**, /, /signup/**, /user/**, /css/**, /js/**, /webjars/**, /favicon.ico, /images/**, /oauth2/authorization/**, /login/oauth2/code/**, /logout
        - id: exchange
          uri: ${EXCHANGE_SERVICE_URL:http://localhost:8086}
          predicates:
            - Path=/api/rates/**
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URL:http://localhost:8090/realms/bank-realm}

# Spring Boot Actuator endpoints
management:
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://localhost:9411/api/v2/spans} # Эндпоинт Zipkin
  tracing:
    sampling:
      probability: 1 # Частота отправляемых трейсов
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      probes:
        enabled: true